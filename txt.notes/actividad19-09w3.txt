1.- SELECT P.ProductName, S.SupplierName, C.CategoryName FROM (Products as P INNER JOIN Categories as C ON P.CategoryID = C.CategoryID) INNER JOIN Suppliers as S ON P.SupplierID = S.SupplierID;
2.- SELECT S.ShipperName, C.CustomerName, E.FirstName FROM ((Orders as O INNER JOIN Shippers as S ON O.ShipperID = S.ShipperID) INNER JOIN Customers as C ON O.CustomerID = C.CustomerID) INNER JOIN Employees as E ON O.EmployeeID = E.EmployeeID;
3.- SELECT O.OrderID as 'Numero de orden', C.CustomerName as 'Nombre del cliente', O.OrderDate as Fecha, P.ProductName as 'Nombre del producto', COUNT(O.OrderID) as cantidad FROM ((Orders as O INNER JOIN OrderDetails as OD ON O.OrderID = OD.OrderID) INNER JOIN Products as P ON OD.ProductID = P.ProductID) INNER JOIN Customers as C ON O.CustomerID = C.CustomerID WHERE C.Country LIKE 'Germany' GROUP BY C.CustomerName, O.OrderID, O.OrderDate, P.ProductName;
4.-SELECT Customers.ContactName, Products.ProductName FROM (((Customers INNER JOIN Orders ON  ustomers.CustomerID = Orders.CustomerID) INNER JOIN OrderDetails ON Orders.OrderID =  OrderDetails.OrderID) INNER JOIN Products ON OrderDetails.ProductID = Products.ProductID) INNER JOIN Suppliers ON Products.SupplierID = Suppliers.SupplierID WHERE Suppliers.Country like 'Japan';
5.- CREATE TABLE Empleados (
    ID int PRIMARY KEY AUTO_INCREMENT,
    nombre varchar(30),
    sueldo decimal(10, 2) CHECK (sueldo > 100),
    puesto varchar(30),
    edadIngreso int CHECK (edadIngreso BETWEEN 18 AND 35),
    supervisor int
);


CREATE TABLE clientes (
	id int NOT NULL AUTO_INCREMENT, 
	nombre char(30) NOT NULL,
	apellido varchar(30) NULL,
	edad int,
	CHECK (edad >= 18),
	PRIMARY KEY (id)
);

CREATE TABLE ventas (
	folio int NOT NULL AUTO_INCREMENT,
	fecha date,
	total double,
	id_cliente int,
	FOREIGN KEY (id_cliente) REFERENCES clientes(id) ON DELETE restrict ON UPDATE cascade,
	PRIMARY KEY (folio)
);

CREATE TABLE empleados (
	id int NOT NULL,
	nombre char(30),
	sueldo int,
	puesto varchar(30),
	edadIngreso int, 
	CHECK (edadIngreso BETWEEN 18 AND 35),
	CHECK (sueldo > 100),
	supervisor int,
	PRIMARY KEY (id),
	FOREIGN KEY (supervisor) REFERENCES empleados(id) ON DELETE restrict ON UPDATE cascade
);


INSERT INTO empleados (id, nombre, sueldo, puesto, edadIngreso, supervisor) VALUES (1, 'Ana', 180, 'Gerente', 22, NULL);

INSERT INTO empleados (id, nombre, sueldo, puesto, edadIngreso, supervisor) 
VALUES (1, 'Ana', 170, 'Gerente', 23, NULL),
(2, 'Juana', 160, 'Jefe', 21, 1),
(3, 'Beto', 120, 'Cajero', 20, 2),
(4, 'Filemon', 120, 'Cajero', 20, 2),
(5, 'Nepomuceno', 120, 'Cajero', 21, 2),
(6, 'Astatracio', 120, 'Cajero', 24, 2)
;

